% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datasets.R
\name{custom_SBC_generator}
\alias{custom_SBC_generator}
\title{Wrap a function the creates a complete dataset.}
\usage{
custom_SBC_generator(f, ...)
}
\arguments{
\item{f}{function accepting at least an \code{n_datasets} argument and returning
and \code{SBC_datasets} object}

\item{...}{Additional arguments passed to \code{f}}
}
\description{
This creates a very thin wrapper around the function.
Running:
}
\details{
\if{html}{\out{<div class="r">}}\preformatted{gen <- custom_SBC_generator(f, <<some other args>>)
datasets <- generate_datasets(gen, n_datasets = my_n_datasets)
}\if{html}{\out{</div>}}

is equivalent to just running\if{html}{\out{<div class="r">}}\preformatted{datasets <- f(<<some other args>>, n_datasets = my_n_datasets)
}\if{html}{\out{</div>}}

So whenever you control the code calling \code{generate_datasets},
it usually makes more sense to just create an \code{SBC_datasets}
object directly and avoid using \code{custom_SBC_generator} and \code{generate_datasets} at all.
\code{custom_SBC_generator} can however be useful, when a code you
do not control calls \code{generate_datasets} for you and any of the
buil-in generators does not provide you with enough flexibility.
}
